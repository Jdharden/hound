relative_risk <- function(x_impacted, x_pop, y_impacted, y_pop) {
risk <- (x_impacted/x_pop) / (y_impacted/y_pop)
}
relative_risk <- function(x_impacted, x_pop, y_impacted, y_pop) {
risk <- (x_impacted/x_pop) / (y_impacted/y_pop)
if(risk > 0){
print(paste("The outcome based analysis shows that group A's rate is", risk "times the rate
of group B's"))
}
}
relative_risk <- function(x_impacted, x_pop, y_impacted, y_pop) {
risk <- (x_impacted/x_pop) / (y_impacted/y_pop)
if(risk > 0){
print(paste("The outcome based analysis shows that group A's rate is", risk, "times the rate
of group B's"))
}
}
relative_risk(1, 2, 3, 4)
relative_risk <- function(x_impacted, x_pop, y_impacted, y_pop) {
risk <- (x_impacted/x_pop) / (y_impacted/y_pop)
if(risk > 0){
print(paste("The outcome based analysis shows that group A's rate is", round(risk),"times the rate
of group B's"))
}
}
relative_risk(1, 2, 3, 4)
relative_risk <- function(x_impacted, x_pop, y_impacted, y_pop) {
risk <- (x_impacted/x_pop) / (y_impacted/y_pop)
if(risk > 0){
print(paste("The outcome based analysis shows that group A's rate is", round(risk),"times the rate
of group B's"))
}
}
relative_risk(1, 2, 3, 4)
relative_risk <- function(x_impacted, x_pop, y_impacted, y_pop) {
risk <- (x_impacted/x_pop) / (y_impacted/y_pop)
if(risk > 0){
print(paste("The outcome based analysis shows that group A's rate is", round(risk),"times the rate of group B's"))
}
}
relative_risk(1, 2, 3, 4)
percent_change <- function(new, old) {
change <- ((old - new)/old)*100
}
percent_change(3, 4)
percent_change <- function(new, old) {
change <- ((old - new)/old)*100
print()
}
percent_change(3, 4)
percent_change <- function(new, old) {
change <- ((old - new)/old)*100
print(change)
}
percent_change(3, 4)
percent_change(1, 4)
percent_change <- function(new, old) {
change <- ((old - new)/old)*100
if(change > 0) [
print(paste("There was a", change, "percent increase"))
]
print(change)
}
}
}
percent_change <- function(new, old) {
change <- ((old - new)/old)*100
if(change > 0) {
print(paste("There was a", change, "percent increase"))
}
print(change)
}
percent_change(1, 4)
percent_change <- function(new, old) {
change <- ((old - new)/old)*100
if(change > 0) {
print(paste("There was a", change, "percent increase"))
}
}
percent_change(1, 4)
percent_change <- function(new, old) {
change <- ((old - new)/old)*100
if(change > 0) {
print(paste("There was a", change, "percent increase"))
}
if(change < 0) {
print(paste("There was a", change, "percent decrease"))
}
}
percent_change(1, 4)
percent_change(6, 4)
library(hound)
detach("package:hound", unload = TRUE)
install_github("Jdharden/hound")
library(devtools)
install_github("Jdharden/hound")
